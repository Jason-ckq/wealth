{"version":3,"file":"./js/src_pages_Vector_threejs_components_3dEarth_index_js.chunk.js","mappings":";;;;;;;;;;;AAA4B;AAE5B,IAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC;AAEnD,IAAIH,8CAAK,CAAC;EAAEC,GAAG,EAAHA;AAAI,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;ACJ2B;AACE;AACR;AACM;AACR;AACgB;AACR;AACN;AAEvC,IAAMW,QAAQ,GAAG,CACf;EACEC,IAAI,EAAE,UAAU;EAChBC,GAAG,EAAEV,iDAAQA;AACf,CAAC,EACD;EACES,IAAI,EAAE,WAAW;EACjBC,GAAG,EAAET,kDAASA;AAChB,CAAC,EACD;EACEQ,IAAI,EAAE,OAAO;EACbC,GAAG,EAAER,8CAAKA;AACZ,CAAC,EACD;EACEO,IAAI,EAAE,UAAU;EAChBC,GAAG,EAAEP,iDAAQA;AACf,CAAC,EAED;EACEM,IAAI,EAAE,MAAM;EACZC,GAAG,EAAEN,6CAAIA;AACX,CAAC,EACD;EACEK,IAAI,EAAE,cAAc;EACpBC,GAAG,EAAEL,qDAAYA;AACnB,CAAC,EACD;EACEI,IAAI,EAAE,UAAU;EAChBC,GAAG,EAAEJ,iDAAQA;AACf,CAAC,EACD;EACEG,IAAI,EAAE,OAAO;EACbC,GAAG,EAAEH,8CAAKA;AACZ,CAAC,CACF;;AAED;AACO,IAAMI,SAAS,GAAG;EACvBH,QAAQ,EAARA;AACF,CAAC;;;;;;;;;;;;;;;;;;;;AChDD;AACA;AACA;AACA;AAC+B;AAC2C;AAAA,IAEpEM,KAAK;EACT,SAAAA,MAAYjB,GAAG,EAAE;IAAAkB,iFAAA,OAAAD,KAAA;IACf,IAAI,CAACjB,GAAG,GAAGA,GAAG;IACd,IAAI,CAACmB,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB;EACA;AACF;AACA;EAFEC,8EAAA,CAAAJ,KAAA;IAAAK,GAAA;IAAAC,KAAA,EAGA,SAAAJ,WAAA,EAAa;MACX,IAAI,CAACK,KAAK,GAAG,IAAIT,wCAAW,CAAC,CAAC;MAC9B,IAAI,CAACW,MAAM,GAAG,IAAIX,oDAAuB,CACvC,EAAE,EACFa,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EACtC,CAAC,EACD,MACF,CAAC;MAED,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC;MAErC,IAAI,CAACC,QAAQ,GAAG,IAAIlB,gDAAmB,CAAC;QACtCoB,KAAK,EAAE,IAAI;QAAE;QACbC,SAAS,EAAE,IAAI,CAAE;MACnB,CAAC,CAAC;;MAEF,IAAI,CAACH,QAAQ,CAACI,aAAa,CAACT,MAAM,CAACU,gBAAgB,CAAC,CAAC,CAAC;MACtD,IAAI,CAACL,QAAQ,CAACM,OAAO,CAACX,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC;MAC9D,IAAI,CAAC9B,GAAG,CAACwC,WAAW,CAAC,IAAI,CAACP,QAAQ,CAACQ,UAAU,CAAC;IAChD;;IAEA;AACF;AACA;EAFE;IAAAnB,GAAA;IAAAC,KAAA,EAGA,SAAAH,YAAA,EAAc;MACZ;MACA,IAAI,CAACsB,QAAQ,GAAG,IAAI1B,oFAAa,CAAC,IAAI,CAACU,MAAM,EAAE,IAAI,CAACO,QAAQ,CAACQ,UAAU,CAAC;MACxE,IAAI,CAACC,QAAQ,CAACC,eAAe,GAAG,CAAC;MACjC;MACA,IAAI,CAACD,QAAQ,CAACE,aAAa,GAAG,IAAI;MAClC;MACA,IAAI,CAACF,QAAQ,CAACG,aAAa,GAAG,IAAI;MAClC;MACA,IAAI,CAACH,QAAQ,CAACI,UAAU,GAAG,IAAI;MAC/B;MACA,IAAI,CAACJ,QAAQ,CAACK,WAAW,GAAG,GAAG;MAC/B;MACA,IAAI,CAACL,QAAQ,CAACM,WAAW,GAAG,GAAG;MAC/B;MACA,IAAI,CAACN,QAAQ,CAACO,SAAS,GAAG,IAAI;IAChC;EAAC;EAAA,OAAAhC,KAAA;AAAA;AAGH,iEAAeA,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3Dc;AAmBnB;AAC0C;AACJ;AAQ5B;AACa;AACA;AACU;AAAA,IAE1C8D,KAAK;EACT,SAAAA,MAAYC,OAAO,EAAE;IAAA9D,iFAAA,OAAA6D,KAAA;IACnB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,KAAK,GAAG,IAAI9B,yCAAK,CAAC,CAAC;IACxB,IAAI,CAAC8B,KAAK,CAACrE,IAAI,GAAG,OAAO;IACzB,IAAI,CAACqE,KAAK,CAACC,KAAK,CAAClD,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7B;IACA,IAAI,CAACmD,UAAU,GAAG,IAAIhC,yCAAK,CAAC,CAAC;IAC7B,IAAI,CAAC8B,KAAK,CAACG,GAAG,CAAC,IAAI,CAACD,UAAU,CAAC;IAC/B,IAAI,CAACA,UAAU,CAACvE,IAAI,GAAG,YAAY;IACnC;IACA,IAAI,CAACyE,UAAU,GAAG,IAAI,CAACL,OAAO,CAACtE,KAAK,CAAC2E,UAAU;IAC/C;IACA,IAAI,CAACC,SAAS,GAAG,GAAG;IACpB,IAAI,CAACC,QAAQ,GAAG;MACdC,SAAS,EAAE;QACTjE,KAAK,EAAE,IAAIgC,yCAAK,CAAC,QAAQ;MAC3B,CAAC;MACD2B,KAAK,EAAE;QACLO,IAAI,EAAE,GAAG;QACTlE,KAAK,EAAE,CAAC;MACV,CAAC;MACDmE,IAAI,EAAE;QACJD,IAAI,EAAE,GAAG;QACTlE,KAAK,EAAE;MACT,CAAC;MACDoE,KAAK,EAAE;QACLF,IAAI,EAAE,GAAG;QACTlE,KAAK,EAAE;MACT,CAAC;MACDqE,IAAI,EAAE;QACJH,IAAI,EAAE,GAAG;QACTlE,KAAK,EAAE,IAAI,CAAC+D;MACd,CAAC;MACDO,OAAO,EAAE;QACPtE,KAAK,EAAE;MACT,CAAC;MACDuE,GAAG,EAAE;QACHvE,KAAK,EAAE;MACT;IACF,CAAC;;IAED;IACA,IAAI,CAACwE,WAAW,GAAG,IAAI5C,yCAAK,CAAC,CAAC;IAC9B,IAAI,CAAC4C,WAAW,CAACnF,IAAI,GAAG,aAAa;IACrC,IAAI,CAACoF,WAAW,GAAG,EAAE;;IAErB;IACA,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,CAAC,GAAG,CAAC;IACV,IAAI,CAACC,CAAC,GAAG,CAAC;EACZ;EAAC/E,8EAAA,CAAA0D,KAAA;IAAAzD,GAAA;IAAAC,KAAA,EAED,SAAA8E,KAAA,EAAO;MAAA,IAAAC,KAAA;MACL,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAK;QAC9BF,KAAI,CAACG,WAAW,CAAC,CAAC,CAAC,CAAC;QACpBH,KAAI,CAACI,WAAW,CAAC,CAAC,CAAC,CAAC;QACpBJ,KAAI,CAACK,iBAAiB,CAAC,CAAC;QACxBL,KAAI,CAACM,eAAe,CAAC,CAAC,CAAC,CAAC;QACxBN,KAAI,CAACO,mBAAmB,CAAC,CAAC,CAAC,CAAC;QAC5BP,KAAI,CAACQ,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC1BR,KAAI,CAACS,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC1BT,KAAI,CAACU,mBAAmB,CAAC,CAAC,CAAC,CAAC;QAC5BV,KAAI,CAACW,aAAa,CAAC,CAAC,CAAC,CAAC;QACtBX,KAAI,CAACY,IAAI,CAAC,CAAC;QACXV,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;EAFE;IAAAlF,GAAA;IAAAC,KAAA,EAGA,SAAAkF,YAAA,EAAc;MACZ,IAAMU,cAAc,GAAG,IAAI/D,kDAAc,CACvC,IAAI,CAAC4B,OAAO,CAACtE,KAAK,CAAC0G,MAAM,EACzB,EAAE,EACF,EACF,CAAC;MAED,IAAMC,YAAY,GAAG,IAAIjE,kDAAc,CACrC,IAAI,CAAC4B,OAAO,CAACtE,KAAK,CAAC0G,MAAM,GAAG,EAAE,EAC9B,EAAE,EACF,EACF,CAAC;MAED,IAAME,aAAa,GAAG,IAAIjE,kDAAc,CAAC;QACvCkE,KAAK,EAAE,QAAQ;QAAE;QACjBC,WAAW,EAAE,IAAI;QACjBC,eAAe,EAAE,IAAI;QACrBC,OAAO,EAAE,GAAG;QACZC,YAAY,EAAE,KAAK;QAAE;QACrBC,IAAI,EAAE,IAAI,CAAE;MACd,CAAC,CAAC;;MAEF,IAAMC,MAAM,GAAG,IAAIvE,0CAAM,CAAC+D,YAAY,EAAEC,aAAa,CAAC,CAAC,CAAC;;MAExD,IAAI,CAACnC,UAAU,CAACC,GAAG,CAACyC,MAAM,CAAC;MAE3B,IAAI,CAACtC,QAAQ,CAACO,GAAG,CAACvE,KAAK,GAAG,IAAI,CAACyD,OAAO,CAACrE,QAAQ,CAACD,KAAK;MAErD,IAAMoH,cAAc,GAAG,IAAItE,kDAAc,CAAC;QACxC;QACA+B,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBwC,YAAY,EAAE1D,gEAAW;QACzB2D,cAAc,EAAE5D,kEAAaA;MAC/B,CAAC,CAAC;MACF0D,cAAc,CAACG,WAAW,GAAG,IAAI;MACjC,IAAI,CAACvH,KAAK,GAAG,IAAI+C,wCAAI,CAAC0D,cAAc,EAAEW,cAAc,CAAC;MACrD,IAAI,CAACpH,KAAK,CAACE,IAAI,GAAG,OAAO;MACzB,IAAI,CAACuE,UAAU,CAACC,GAAG,CAAC,IAAI,CAAC1E,KAAK,CAAC;IACjC;;IAEA;AACF;AACA;EAFE;IAAAY,GAAA;IAAAC,KAAA,EAGA,SAAAmF,YAAA,EAAc;MACZ,IAAMwB,QAAQ,GAAG,EAAE;MACnB,IAAMC,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,EAAEA,CAAC,EAAE,EAAE;QAC7B,IAAMC,MAAM,GAAG,IAAI3E,2CAAO,CAAC,CAAC;QAC5B2E,MAAM,CAAClC,CAAC,GAAG,GAAG,GAAGmC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;QACpCF,MAAM,CAACG,CAAC,GAAG,GAAG,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;QACpCF,MAAM,CAACI,CAAC,GAAG,GAAG,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;QACpCL,QAAQ,CAACQ,IAAI,CAACL,MAAM,CAAClC,CAAC,EAAEkC,MAAM,CAACG,CAAC,EAAEH,MAAM,CAACI,CAAC,CAAC;QAC3CN,MAAM,CAACO,IAAI,CAAC,IAAInF,yCAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MACjC;;MAEA;MACA,IAAI,CAACoF,MAAM,GAAG,IAAIhF,kDAAc,CAAC,CAAC;MAClC,IAAI,CAACgF,MAAM,CAACC,YAAY,CACtB,UAAU,EACV,IAAIhF,mDAAe,CAAC,IAAIiF,YAAY,CAACX,QAAQ,CAAC,EAAE,CAAC,CACnD,CAAC;MACD,IAAI,CAACS,MAAM,CAACC,YAAY,CACtB,OAAO,EACP,IAAIhF,mDAAe,CAAC,IAAIiF,YAAY,CAACV,MAAM,CAAC,EAAE,CAAC,CACjD,CAAC;MAED,IAAMW,cAAc,GAAG,IAAIzF,kDAAc,CAAC;QACxC0F,IAAI,EAAE,CAAC;QACPtB,eAAe,EAAE,IAAI;QACrBF,KAAK,EAAE,QAAQ;QACfC,WAAW,EAAE,IAAI;QACjBE,OAAO,EAAE,CAAC;QACV5B,GAAG,EAAE,IAAI,CAACd,OAAO,CAACrE,QAAQ,CAACR;MAC7B,CAAC,CAAC;MAEF,IAAI,CAAC6I,YAAY,GAAG,IAAI1F,0CAAM,CAAC,IAAI,CAACqF,MAAM,EAAEG,cAAc,CAAC;MAC3D,IAAI,CAACE,YAAY,CAACpI,IAAI,GAAG,IAAI;MAC7B,IAAI,CAACoI,YAAY,CAAC9D,KAAK,CAAClD,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACpC,IAAI,CAACiD,KAAK,CAACG,GAAG,CAAC,IAAI,CAAC4D,YAAY,CAAC;IACnC;EAAC;IAAA1H,GAAA;IAAAC,KAAA,EAED,SAAAoF,kBAAA,EAAoB;MAClB,IAAI,CAACsC,KAAK,GAAG,IAAI9F,yCAAK,CAAC,CAAC;MACxB,IAAM+F,QAAQ,GAAG,IAAI/E,+CAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACzC,KAAK,IAAIiE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,IAAI,CAAC,EAAE;QAC/B,IAAMe,EAAE,GAAGb,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;QAC9B,IAAMa,EAAE,GAAGd,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;QAC9B,IAAMc,EAAE,GAAGf,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;QAC9B,IAAMe,UAAU,GACd,IAAI,CAACtE,OAAO,CAACtE,KAAK,CAAC0G,MAAM,GAAG,CAAC,GAC7B,CAACkB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAACvD,OAAO,CAACtE,KAAK,CAAC0G,MAAM,GAAG,GAAG;QACzD,IAAMmC,YAAY,GAAGjB,IAAI,CAACkB,IAAI,CAAClB,IAAA,CAAAmB,GAAA,CAAAN,EAAE,EAAI,CAAC,IAAAb,IAAA,CAAAmB,GAAA,CAAGL,EAAE,EAAI,CAAC,IAAAd,IAAA,CAAAmB,GAAA,CAAGJ,EAAE,EAAI,CAAC,EAAC;QAC3D,IAAMK,YAAY,GAAG,IAAIhG,2CAAO,CAC7ByF,EAAE,GAAGG,UAAU,GAAIC,YAAY,EAC/BH,EAAE,GAAGE,UAAU,GAAIC,YAAY,EAC/BF,EAAE,GAAGC,UAAU,GAAIC,YACtB,CAAC;QACD,IAAMI,QAAQ,GAAG,IAAI3F,qDAAiB,CAAC;UACrCuD,KAAK,EAAE,IAAIhE,yCAAK,CAACuB,8DAAc,CAAC,CAAC,CAAC;UAClC0C,WAAW,EAAE,IAAI;UACjBE,OAAO,EAAEY,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;QAC3B,CAAC,CAAC;QACF,IAAMqB,IAAI,GAAG,IAAInG,wCAAI,CAACyF,QAAQ,EAAES,QAAQ,CAAC;QACzCC,IAAI,CAAC7H,QAAQ,CAACoE,CAAC,GAAGuD,YAAY,CAACvD,CAAC;QAChCyD,IAAI,CAAC7H,QAAQ,CAACyG,CAAC,GAAGkB,YAAY,CAAClB,CAAC;QAChCoB,IAAI,CAAC7H,QAAQ,CAAC0G,CAAC,GAAGiB,YAAY,CAACjB,CAAC;QAChCmB,IAAI,CAACC,QAAQ,CAAC1D,CAAC,GAAGmC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAGD,IAAI,CAACwB,EAAE;QAC7CF,IAAI,CAACC,QAAQ,CAACrB,CAAC,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAGD,IAAI,CAACwB,EAAE;QAC7CF,IAAI,CAACC,QAAQ,CAACpB,CAAC,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAGD,IAAI,CAACwB,EAAE;QAC7C,IAAM5E,KAAK,GAAGoD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;QACjCqB,IAAI,CAAC1E,KAAK,CAACiB,CAAC,GAAGjB,KAAK;QACpB0E,IAAI,CAAC1E,KAAK,CAACsD,CAAC,GAAGtD,KAAK;QACpB0E,IAAI,CAAC1E,KAAK,CAACuD,CAAC,GAAGvD,KAAK;QACpB0E,IAAI,CAAC3B,WAAW,GAAG,IAAI;QACvB,IAAI,CAACgB,KAAK,CAAC7D,GAAG,CAACwE,IAAI,CAAC;MACtB;MACA,IAAI,CAAClJ,KAAK,CAAC0E,GAAG,CAAC,IAAI,CAAC6D,KAAK,CAAC;IAC5B;;IAEA;AACF;AACA;EAFE;IAAA3H,GAAA;IAAAC,KAAA,EAGA,SAAAqF,gBAAA,EAAkB;MAChB,IAAMmD,CAAC,GAAG,IAAI,CAAC/E,OAAO,CAACtE,KAAK,CAAC0G,MAAM,CAAC,CAAC;MACrC,IAAM4C,OAAO,GAAG,IAAI,CAAChF,OAAO,CAACrE,QAAQ,CAACJ,IAAI,CAAC,CAAC;MAC5C,IAAM0J,cAAc,GAAG,IAAIpG,kDAAc,CAAC;QACxCiC,GAAG,EAAEkE,OAAO;QAAE;QACdxC,WAAW,EAAE,IAAI;QAAE;QACnBD,KAAK,EAAE,QAAQ;QACfG,OAAO,EAAE,GAAG;QAAE;QACdwC,UAAU,EAAE,KAAK,CAAE;MACrB,CAAC,CAAC;;MAEF;MACA,IAAMC,MAAM,GAAG,IAAIrG,0CAAM,CAACmG,cAAc,CAAC;MACzCE,MAAM,CAACjF,KAAK,CAAClD,GAAG,CAAC+H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;MACjC,IAAI,CAAC5E,UAAU,CAACC,GAAG,CAAC+E,MAAM,CAAC;IAC7B;;IAEA;AACF;AACA;EAFE;IAAA7I,GAAA;IAAAC,KAAA,EAGA,SAAAsF,oBAAA,EAAsB;MACpB,IAAMkB,YAAY,GAAG,CACnB,oCAAoC,EACpC,6BAA6B,EAC7B,0BAA0B,EAC1B,cAAc,EACd,oDAAoD;MAAE;MACtD,kEAAkE;MAAE;MACpE,qBAAqB,EACrB,0EAA0E,EAC1E,GAAG,CACJ,CAACqC,IAAI,CAAC,IAAI,CAAC;;MAEZ;MACA,IAAMC,UAAU,GAAG;QACjB9E,QAAQ,EAAE;UACR+E,UAAU,EAAE;YACV7E,IAAI,EAAE,GAAG;YACTlE,KAAK,EAAE;UACT,CAAC;UACDoE,KAAK,EAAE;YACLF,IAAI,EAAE,GAAG;YACTlE,KAAK,EAAE;UACT,CAAC;UACDiE,SAAS,EAAE;YACTC,IAAI,EAAE,GAAG;YACTlE,KAAK,EAAE,IAAIgC,yCAAK,CAAC,QAAQ;UAC3B;QACF,CAAC;QACDwE,YAAY,EAAZA,YAAY;QACZC,cAAc,EAAE,CACd,yBAAyB,EACzB,2BAA2B,EAC3B,sBAAsB,EAEtB,6BAA6B,EAC7B,oCAAoC,EAEpC,0BAA0B,EAE1B,cAAc,EACd,oEAAoE;QAAE;QACtE,+EAA+E;QAAE;QACjF,qDAAqD;QAAE;QACvD,qFAAqF,EACrF,6CAA6C,EAC7C,GAAG,CACJ,CAACoC,IAAI,CAAC,IAAI;MACb,CAAC;;MAED;MACA,IAAMT,QAAQ,GAAG,IAAInG,kDAAc,CAAC;QAClC+B,QAAQ,EAAE8E,UAAU,CAAC9E,QAAQ;QAC7BwC,YAAY,EAAEsC,UAAU,CAACtC,YAAY;QACrCC,cAAc,EAAEqC,UAAU,CAACrC,cAAc;QACzCuC,QAAQ,EAAExG,kDAAc;QACxByD,WAAW,EAAE,IAAI;QACjB0C,UAAU,EAAE;MACd,CAAC,CAAC;MAEF,IAAMM,MAAM,GAAG,IAAIpH,kDAAc,CAAC,IAAI,CAAC4B,OAAO,CAACtE,KAAK,CAAC0G,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;MACxE,IAAMqD,IAAI,GAAG,IAAIhH,wCAAI,CAAC+G,MAAM,EAAEb,QAAQ,CAAC;MACvC,IAAI,CAACxE,UAAU,CAACC,GAAG,CAACqF,IAAI,CAAC;IAC3B;;IAEA;AACF;AACA;EAFE;IAAAnJ,GAAA;IAAAC,KAAA;MAAA,IAAAmJ,kBAAA,GAAAC,mFAAA,eAAAC,sEAAA,CAGA,SAAAE,SAAA;QAAA,IAAAC,MAAA;QAAA,OAAAH,sEAAA,UAAAK,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;YAAA;cAAAF,SAAA,CAAAE,IAAA;cAAA,OACQ7E,OAAO,CAAC8E,GAAG,CACf,IAAI,CAACrG,OAAO,CAACsG,IAAI,CAACxF,GAAG;gBAAA,IAAAyF,IAAA,GAAAZ,mFAAA,eAAAC,sEAAA,CAAC,SAAAY,QAAOC,IAAI;kBAAA,IAAArE,MAAA,EAAAsE,GAAA,EAAAC,GAAA,EAAAlB,IAAA,EAAAmB,WAAA,EAAAC,QAAA;kBAAA,OAAAjB,sEAAA,UAAAkB,SAAAC,QAAA;oBAAA,kBAAAA,QAAA,CAAAZ,IAAA,GAAAY,QAAA,CAAAX,IAAA;sBAAA;wBACzBhE,MAAM,GAAG2D,MAAI,CAAC/F,OAAO,CAACtE,KAAK,CAAC0G,MAAM;wBAClCsE,GAAG,GAAGD,IAAI,CAACO,UAAU,CAACC,CAAC,EAAE;wBACzBN,GAAG,GAAGF,IAAI,CAACO,UAAU,CAACE,CAAC,EAAE;wBAC/BnB,MAAI,CAACoB,mBAAmB,GAAG,IAAInI,qDAAiB,CAAC;0BAC/CuD,KAAK,EAAEwD,MAAI,CAAC/F,OAAO,CAACoH,WAAW,CAACC,WAAW;0BAC3CvG,GAAG,EAAEiF,MAAI,CAAC/F,OAAO,CAACrE,QAAQ,CAACN,KAAK;0BAChCmH,WAAW,EAAE,IAAI;0BACjB0C,UAAU,EAAE,KAAK,CAAE;wBACrB,CAAC,CAAC;;wBAEF;wBACMO,IAAI,GAAGjG,8DAAe,CAAC;0BAC3B4C,MAAM,EAANA,MAAM;0BACNsE,GAAG,EAAHA,GAAG;0BACHC,GAAG,EAAHA,GAAG;0BACHhC,QAAQ,EAAEoB,MAAI,CAACoB;wBACjB,CAAC,CAAC;wBACFpB,MAAI,CAAChF,WAAW,CAACX,GAAG,CAACqF,IAAI,CAAC;;wBAE1B;wBACMmB,WAAW,GAAGrH,gEAAiB,CAAC;0BACpC6C,MAAM,EAAE2D,MAAI,CAAC/F,OAAO,CAACtE,KAAK,CAAC0G,MAAM;0BACjCsE,GAAG,EAAHA,GAAG;0BACHC,GAAG,EAAHA,GAAG;0BACHW,KAAK,EAAE,CAAC;0BACR3L,QAAQ,EAAEoK,MAAI,CAAC/F,OAAO,CAACrE,QAAQ;0BAC/ByL,WAAW,EAAErB,MAAI,CAAC/F,OAAO,CAACoH;wBAC5B,CAAC,CAAC;wBACFrB,MAAI,CAAChF,WAAW,CAACX,GAAG,CAACwG,WAAW,CAAC;;wBAEjC;wBACMC,QAAQ,GAAGpH,6DAAc,CAAC;0BAC9B2C,MAAM,EAANA,MAAM;0BACNsE,GAAG,EAAHA,GAAG;0BACHC,GAAG,EAAHA,GAAG;0BACHhL,QAAQ,EAAEoK,MAAI,CAAC/F,OAAO,CAACrE;wBACzB,CAAC,CAAC;wBACFoK,MAAI,CAAChF,WAAW,CAACX,GAAG,CAACyG,QAAQ,CAAC;wBAC9Bd,MAAI,CAAC/E,WAAW,CAAC0C,IAAI,CAACmD,QAAQ,CAAC;wBAACE,QAAA,CAAAX,IAAA;wBAAA,OAE1B7E,OAAO,CAAC8E,GAAG,CACfI,IAAI,CAACc,QAAQ,CAACzG,GAAG,CAAC,UAAC0G,GAAG,EAAK;0BACzB,IAAMd,GAAG,GAAGc,GAAG,CAACP,CAAC,CAAC,CAAC;0BACnB,IAAMN,GAAG,GAAGa,GAAG,CAACN,CAAC,CAAC,CAAC;0BACnB;0BACA,IAAMzB,IAAI,GAAGjG,8DAAe,CAAC;4BAC3B4C,MAAM,EAANA,MAAM;4BACNsE,GAAG,EAAHA,GAAG;4BACHC,GAAG,EAAHA,GAAG;4BACHhC,QAAQ,EAAEoB,MAAI,CAACoB;0BACjB,CAAC,CAAC;0BACFpB,MAAI,CAAChF,WAAW,CAACX,GAAG,CAACqF,IAAI,CAAC;;0BAE1B;0BACA,IAAMmB,WAAW,GAAGrH,gEAAiB,CAAC;4BACpC6C,MAAM,EAAE2D,MAAI,CAAC/F,OAAO,CAACtE,KAAK,CAAC0G,MAAM;4BACjCsE,GAAG,EAAHA,GAAG;4BACHC,GAAG,EAAHA,GAAG;4BACHW,KAAK,EAAE,CAAC;4BACR3L,QAAQ,EAAEoK,MAAI,CAAC/F,OAAO,CAACrE,QAAQ;4BAC/ByL,WAAW,EAAErB,MAAI,CAAC/F,OAAO,CAACoH;0BAC5B,CAAC,CAAC;0BACFrB,MAAI,CAAChF,WAAW,CAACX,GAAG,CAACwG,WAAW,CAAC;;0BAEjC;0BACA,IAAMC,QAAQ,GAAGpH,6DAAc,CAAC;4BAC9B2C,MAAM,EAANA,MAAM;4BACNsE,GAAG,EAAHA,GAAG;4BACHC,GAAG,EAAHA,GAAG;4BACHhL,QAAQ,EAAEoK,MAAI,CAAC/F,OAAO,CAACrE;0BACzB,CAAC,CAAC;0BACFoK,MAAI,CAAChF,WAAW,CAACX,GAAG,CAACyG,QAAQ,CAAC;0BAC9Bd,MAAI,CAAC/E,WAAW,CAAC0C,IAAI,CAACmD,QAAQ,CAAC;wBACjC,CAAC,CACH,CAAC;sBAAA;wBAEDd,MAAI,CAAC5F,UAAU,CAACC,GAAG,CAAC2F,MAAI,CAAChF,WAAW,CAAC;sBAAC;sBAAA;wBAAA,OAAAgG,QAAA,CAAAU,IAAA;oBAAA;kBAAA,GAAAjB,OAAA;gBAAA,CACvC;gBAAA,iBAAAkB,EAAA;kBAAA,OAAAnB,IAAA,CAAAoB,KAAA,OAAAC,SAAA;gBAAA;cAAA,IACH,CAAC;YAAA;YAAA;cAAA,OAAA1B,SAAA,CAAAuB,IAAA;UAAA;QAAA,GAAA3B,QAAA;MAAA,CACF;MAAA,SAAAhE,kBAAA;QAAA,OAAA4D,kBAAA,CAAAiC,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA9F,iBAAA;IAAA;IAED;AACF;AACA;EAFE;IAAAxF,GAAA;IAAAC,KAAA,EAGA,SAAAwF,kBAAA,EAAoB;MAAA,IAAA8F,MAAA;MAClBtG,OAAO,CAAC8E,GAAG,CACT,IAAI,CAACrG,OAAO,CAACsG,IAAI,CAACxF,GAAG,CAAC,UAAC2F,IAAI,EAAK;QAAA,IAAAqB,UAAA;QAC9B,IAAIC,SAAS,GAAG,EAAE;QAClBA,SAAS,CAACrE,IAAI,CAAC+C,IAAI,CAACO,UAAU,CAAC;QAC/Be,SAAS,GAAG,CAAAD,UAAA,GAAAC,SAAS,EAACC,MAAM,CAAAL,KAAA,CAAAG,UAAA,EAAAG,oFAAA,CAAIxB,IAAI,CAACc,QAAQ,EAAC;QAC9ChG,OAAO,CAAC8E,GAAG,CACT0B,SAAS,CAACjH,GAAG;UAAA,IAAAoH,KAAA,GAAAvC,mFAAA,eAAAC,sEAAA,CAAC,SAAAuC,SAAOC,CAAC;YAAA,IAAAC,CAAA,EAAAC,GAAA,EAAAC,YAAA,EAAAC,IAAA,EAAAC,MAAA,EAAAC,OAAA,EAAA5H,GAAA,EAAA6D,QAAA,EAAAQ,MAAA,EAAAwD,GAAA;YAAA,OAAA/C,sEAAA,UAAAgD,UAAAC,SAAA;cAAA,kBAAAA,SAAA,CAAA1C,IAAA,GAAA0C,SAAA,CAAAzC,IAAA;gBAAA;kBACdiC,CAAC,GAAG1I,sDAAO,CAACkI,MAAI,CAAC7H,OAAO,CAACtE,KAAK,CAAC0G,MAAM,GAAG,KAAK,EAAEgG,CAAC,CAACnB,CAAC,EAAEmB,CAAC,CAAClB,CAAC,CAAC;kBACxDoB,GAAG,8BAAAN,MAAA,CAA4BI,CAAC,CAACxM,IAAI;kBACrC2M,YAAY,GAAGtN,QAAQ,CAAC6N,cAAc,CAAC,aAAa,CAAC;kBAC3DP,YAAY,CAACQ,SAAS,GAAGT,GAAG;kBACtBE,IAAI,GAAG;oBACXQ,eAAe,EAAE,IAAI;oBAAE;oBACvB9I,KAAK,EAAE,CAAC;oBACR+I,GAAG,EAAErM,MAAM,CAACU;kBACd,CAAC;kBAAAuL,SAAA,CAAAzC,IAAA;kBAAA,OACoBvG,kDAAW,CAC9B5E,QAAQ,CAAC6N,cAAc,CAAC,aAAa,CAAC,EACtCN,IACF,CAAC;gBAAA;kBAHKC,MAAM,GAAAI,SAAA,CAAAK,IAAA;kBAINR,OAAO,GAAGD,MAAM,CAACU,SAAS,CAAC,WAAW,CAAC;kBACvCrI,GAAG,GAAG,IAAI7B,iDAAa,CAAC,CAAC,CAACmK,IAAI,CAACV,OAAO,CAAC;kBACvC/D,QAAQ,GAAG,IAAI9F,kDAAc,CAAC;oBAClCiC,GAAG,EAAEA,GAAG;oBACR0B,WAAW,EAAE;kBACf,CAAC,CAAC;kBACI2C,MAAM,GAAG,IAAIrG,0CAAM,CAAC6F,QAAQ,CAAC;kBAC7BgE,GAAG,GAAG,CAAC,GAAG,CAACP,CAAC,CAACxM,IAAI,CAACyN,MAAM,GAAG,CAAC,IAAI,CAAC;kBACvClE,MAAM,CAACjF,KAAK,CAAClD,GAAG,CAAC2L,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;kBAC3BxD,MAAM,CAACpI,QAAQ,CAACC,GAAG,CAACqL,CAAC,CAAClH,CAAC,GAAG,GAAG,EAAEkH,CAAC,CAAC7E,CAAC,GAAG,GAAG,EAAE6E,CAAC,CAAC5E,CAAC,GAAG,GAAG,CAAC;kBACpDoE,MAAI,CAACnM,KAAK,CAAC0E,GAAG,CAAC+E,MAAM,CAAC;gBAAC;gBAAA;kBAAA,OAAA0D,SAAA,CAAApB,IAAA;cAAA;YAAA,GAAAU,QAAA;UAAA,CACxB;UAAA,iBAAAmB,GAAA;YAAA,OAAApB,KAAA,CAAAP,KAAA,OAAAC,SAAA;UAAA;QAAA,IACH,CAAC;MACH,CAAC,CACH,CAAC;IACH;;IAEA;AACF;AACA;EAFE;IAAAtL,GAAA;IAAAC,KAAA,EAGA,SAAAyF,oBAAA,EAAsB;MACpB,IAAMuH,IAAI,GAAG7J,8DAAe,CAAC;QAC3B0C,MAAM,EAAE,IAAI,CAACpC,OAAO,CAACtE,KAAK,CAAC0G,MAAM,GAAG,EAAE;QACtCoH,MAAM,EAAE,GAAG;QAAE;QACbC,MAAM,EAAE,IAAI,CAAE;MAChB,CAAC,CAAC;;MAEF,IAAMC,GAAG,GAAG,IAAI1K,qDAAiB,CAAC;QAChCuD,KAAK,EAAE,SAAS;QAChBC,WAAW,EAAE,IAAI;QACjBE,OAAO,EAAE,GAAG;QACZqB,IAAI,EAAE7E,8CAAUA;MAClB,CAAC,CAAC;MAEF,IAAMyK,IAAI,GAAGrK,gEAAiB,CAAC;QAC7BsK,SAAS,EAAEL,IAAI;QACf5E,QAAQ,EAAE+E,GAAG;QACbF,MAAM,EAAE,GAAG;QACXpH,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAI,CAACjC,UAAU,CAACC,GAAG,CAACuJ,IAAI,CAAC;;MAEzB;MACA,IAAME,EAAE,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC;MACvBD,EAAE,CAAC3J,KAAK,CAAClD,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAC3B6M,EAAE,CAACE,OAAO,CAACzG,IAAI,CAACwB,EAAE,GAAG,CAAC,CAAC;MACvB,IAAI,CAAC3E,UAAU,CAACC,GAAG,CAACyJ,EAAE,CAAC;MAEvB,IAAMG,EAAE,GAAGL,IAAI,CAACG,KAAK,CAAC,CAAC;MACvBE,EAAE,CAAC9J,KAAK,CAAClD,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAC3BgN,EAAE,CAACD,OAAO,CAAC,CAACzG,IAAI,CAACwB,EAAE,GAAG,CAAC,CAAC;MACxB,IAAI,CAAC3E,UAAU,CAACC,GAAG,CAAC4J,EAAE,CAAC;;MAEvB;AACJ;AACA;MACI,IAAMC,IAAI,GAAG,IAAIxL,wCAAI,CACnB,IAAIL,kDAAc,CAAC,IAAI,CAAC4B,OAAO,CAACkK,SAAS,CAACtH,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EACvD,IAAI5D,qDAAiB,CAAC;QACpBuD,KAAK,EAAE,SAAS,CAAE;MACpB,CAAC,CACH,CAAC;;MAED,IAAM4H,KAAK,GAAG,IAAI1L,wCAAI,CACpB,IAAIL,kDAAc,CAAC,IAAI,CAAC4B,OAAO,CAACkK,SAAS,CAACtH,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EACvD,IAAI5D,qDAAiB,CAAC;QACpBuD,KAAK,EAAE,SAAS,CAAE;MACpB,CAAC,CACH,CAAC;;MAED,IAAM6H,KAAK,GAAG,IAAI3L,wCAAI,CACpB,IAAIL,kDAAc,CAAC,IAAI,CAAC4B,OAAO,CAACkK,SAAS,CAACtH,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EACvD,IAAI5D,qDAAiB,CAAC;QACpBuD,KAAK,EAAE,SAAS,CAAE;MACpB,CAAC,CACH,CAAC;;MAED,IAAI,CAACtB,cAAc,CAACyC,IAAI,CAACiG,IAAI,EAAEE,EAAE,EAAEG,EAAE,CAAC;MACtCC,IAAI,CAACrO,IAAI,GAAGuO,KAAK,CAACvO,IAAI,GAAGwO,KAAK,CAACxO,IAAI,GAAG,IAAI;MAE1C,KAAK,IAAIwH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpD,OAAO,CAACkK,SAAS,CAACV,MAAM,EAAEpG,CAAC,EAAE,EAAE;QACtD,IAAMiH,MAAM,GAAGJ,IAAI,CAACH,KAAK,CAAC,CAAC;QAC3B;QACA,IAAMQ,GAAG,GAAGhH,IAAI,CAACiH,KAAK,CAAChB,IAAI,CAACF,MAAM,GAAG,IAAI,CAACrJ,OAAO,CAACkK,SAAS,CAACV,MAAM,CAAC;QACnEa,MAAM,CAACtN,QAAQ,CAACC,GAAG,CACjBuM,IAAI,CAACe,GAAG,IAAIlH,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAC1BmG,IAAI,CAACe,GAAG,IAAIlH,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAC1BmG,IAAI,CAACe,GAAG,IAAIlH,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAC3B,CAAC;QACDuG,IAAI,CAACvJ,GAAG,CAACiK,MAAM,CAAC;QAEhB,IAAMG,MAAM,GAAGL,KAAK,CAACL,KAAK,CAAC,CAAC;QAC5B,IAAMW,KAAK,GAAGnH,IAAI,CAACiH,KAAK,CAAChB,IAAI,CAACF,MAAM,GAAG,IAAI,CAACrJ,OAAO,CAACkK,SAAS,CAACV,MAAM,CAAC;QACrEgB,MAAM,CAACzN,QAAQ,CAACC,GAAG,CACjBuM,IAAI,CAACkB,KAAK,IAAIrH,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAC5BmG,IAAI,CAACkB,KAAK,IAAIrH,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAC5BmG,IAAI,CAACkB,KAAK,IAAIrH,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAC7B,CAAC;QACDyG,EAAE,CAACzJ,GAAG,CAACoK,MAAM,CAAC;QAEd,IAAME,MAAM,GAAGP,KAAK,CAACL,KAAK,CAAC,CAAC;QAC5B,IAAMa,KAAK,GAAGrH,IAAI,CAACiH,KAAK,CAAChB,IAAI,CAACF,MAAM,GAAG,IAAI,CAACrJ,OAAO,CAACkK,SAAS,CAACV,MAAM,CAAC;QACrEkB,MAAM,CAAC3N,QAAQ,CAACC,GAAG,CACjBuM,IAAI,CAACoB,KAAK,IAAIvH,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAC5BmG,IAAI,CAACoB,KAAK,IAAIvH,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAC5BmG,IAAI,CAACoB,KAAK,IAAIvH,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAC7B,CAAC;QACD4G,EAAE,CAAC5J,GAAG,CAACsK,MAAM,CAAC;MAChB;IACF;;IAEA;AACF;AACA;EAFE;IAAApO,GAAA;IAAAC,KAAA,EAGA,SAAA0F,cAAA,EAAgB;MAAA,IAAA2I,MAAA;MACd,IAAI,CAACC,eAAe,GAAG,IAAI1M,yCAAK,CAAC,CAAC;MAClC,IAAI,CAAC0M,eAAe,CAACC,QAAQ,CAAC,cAAc,CAAC,GAAG,EAAE;MAClD,IAAI,CAAC3K,UAAU,CAACC,GAAG,CAAC,IAAI,CAACyK,eAAe,CAAC;MAEzC,IAAI,CAAC7K,OAAO,CAACsG,IAAI,CAACyE,OAAO,CAAC,UAACC,MAAM,EAAK;QACpCA,MAAM,CAACzD,QAAQ,CAACwD,OAAO,CAAC,UAACtE,IAAI,EAAK;UAChC;UACA,IAAMwE,OAAO,GAAGrL,kDAAM,CACpBgL,MAAI,CAAC5K,OAAO,CAACtE,KAAK,CAAC0G,MAAM,EACzB4I,MAAM,CAAChE,UAAU,CAACC,CAAC,EACnB+D,MAAM,CAAChE,UAAU,CAACE,CAAC,EACnBT,IAAI,CAACQ,CAAC,EACNR,IAAI,CAACS,CAAC,EACN0D,MAAI,CAAC5K,OAAO,CAACkL,OACf,CAAC;UACDN,MAAI,CAACC,eAAe,CAACzK,GAAG,CAAC6K,OAAO,CAAC,CAAC,CAAC;UACnCL,MAAI,CAACC,eAAe,CAACC,QAAQ,CAAC,cAAc,CAAC,CAACpH,IAAI,CAChDuH,OAAO,CAACH,QAAQ,CAAC,SAAS,CAC5B,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;EAFE;IAAAxO,GAAA;IAAAC,KAAA,EAGA,SAAA2F,KAAA,EAAO;MACLhE,uDAAI,CAACiN,EAAE,CAAC,IAAI,CAAClL,KAAK,CAACC,KAAK,EAAE;QACxBiB,CAAC,EAAE,GAAG;QACNqC,CAAC,EAAE,GAAG;QACNC,CAAC,EAAE,GAAG;QACN2H,QAAQ,EAAE,CAAC;QACXC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EAAC;IAAA/O,GAAA;IAAAC,KAAA,EAED,SAAA+O,OAAA,EAAS;MAAA,IAAAC,qBAAA;QAAAC,sBAAA;QAAAC,MAAA;MACP;MACA,IAAI,IAAI,CAACpL,UAAU,EAAE;QACnB,IAAI,CAACF,UAAU,CAAC0E,QAAQ,CAACrB,CAAC,IAAI,IAAI,CAACxD,OAAO,CAACtE,KAAK,CAACgQ,WAAW;MAC9D;;MAEA;MACA,IAAI,CAACnL,QAAQ,CAACK,IAAI,CAACrE,KAAK,GACtB,IAAI,CAACgE,QAAQ,CAACK,IAAI,CAACrE,KAAK,GAAG,CAAC,IAAI,CAAC+D,SAAS,GACtC,IAAI,CAACA,SAAS,GACd,IAAI,CAACC,QAAQ,CAACK,IAAI,CAACrE,KAAK,GAAG,CAAC;;MAElC;MACA,CAAAgP,qBAAA,OAAI,CAACV,eAAe,cAAAU,qBAAA,wBAAAC,sBAAA,GAApBD,qBAAA,CAAsBT,QAAQ,CAAC,cAAc,CAAC,cAAAU,sBAAA,uBAA9CA,sBAAA,CAAgDT,OAAO,CAAC,UAACY,GAAG,EAAK;QAC/DA,GAAG,CAAC9G,QAAQ,CAACpB,CAAC,IAAIgI,MAAI,CAACzL,OAAO,CAACkL,OAAO,CAACU,KAAK,CAAC,CAAC;QAC9C,IAAID,GAAG,CAAC9G,QAAQ,CAACpB,CAAC,IAAIkI,GAAG,CAACE,WAAW,EAAEF,GAAG,CAAC9G,QAAQ,CAACpB,CAAC,GAAG,CAAC;MAC3D,CAAC,CAAC;MAEF,IAAI,CAACxC,cAAc,CAAC8J,OAAO,CAAC,UAAC3C,CAAC,EAAK;QACjCA,CAAC,CAAC0D,OAAO,CAACL,MAAI,CAACzL,OAAO,CAACkK,SAAS,CAACwB,WAAW,CAAC;MAC/C,CAAC,CAAC;MAEF,IAAI,IAAI,CAAC1K,WAAW,CAACqI,MAAM,EAAE;QAC3B,IAAI,CAACrI,WAAW,CAAC+J,OAAO,CAAC,UAACtF,IAAI,EAAK;UACjCA,IAAI,CAACqF,QAAQ,CAAC,OAAO,CAAC,IAAI,KAAK;UAC/BrF,IAAI,CAACvF,KAAK,CAAClD,GAAG,CACZyI,IAAI,CAACqF,QAAQ,CAAC,MAAM,CAAC,GAAGrF,IAAI,CAACqF,QAAQ,CAAC,OAAO,CAAC,EAC9CrF,IAAI,CAACqF,QAAQ,CAAC,MAAM,CAAC,GAAGrF,IAAI,CAACqF,QAAQ,CAAC,OAAO,CAAC,EAC9CrF,IAAI,CAACqF,QAAQ,CAAC,MAAM,CAAC,GAAGrF,IAAI,CAACqF,QAAQ,CAAC,OAAO,CAC/C,CAAC;UACD,IAAIrF,IAAI,CAACqF,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,EAAE;YACjCrF,IAAI,CAACd,QAAQ,CAACjC,OAAO,GAAG,CAAC+C,IAAI,CAACqF,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;UAC5D,CAAC,MAAM,IACLrF,IAAI,CAACqF,QAAQ,CAAC,OAAO,CAAC,GAAG,GAAG,IAC5BrF,IAAI,CAACqF,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAC3B;YACArF,IAAI,CAACd,QAAQ,CAACjC,OAAO,GAAG,CAAC,GAAG,CAAC+C,IAAI,CAACqF,QAAQ,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;UAClE,CAAC,MAAM;YACLrF,IAAI,CAACqF,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;UAC5B;QACF,CAAC,CAAC;MACJ;IACF;EAAC;EAAA,OAAA/K,KAAA;AAAA;AAGH,iEAAeA,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;AC9mBkC;AACjB;;AAErC;AAAA,IACMiM,SAAS;EACb,SAAAA,UAAYC,QAAQ,EAAE;IAAA/P,iFAAA,OAAA8P,SAAA;IACpB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACtQ,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI,CAACuQ,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB;EACA;AACF;AACA;EAFE9P,8EAAA,CAAA2P,SAAA;IAAA1P,GAAA;IAAAC,KAAA,EAGA,SAAA2P,kBAAA,EAAoB;MAAA,IAAA5K,KAAA;MAClB,IAAI,CAAC8K,OAAO,GAAG,IAAIL,iDAAc,CAAC,CAAC;MACnC,IAAI,CAACK,OAAO,CAACC,OAAO,GAAG;QAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MAAA;MACpD,IAAI,CAACH,OAAO,CAACI,MAAM,GAAG;QAAA,OAAMlL,KAAI,CAAC2K,QAAQ,CAAC,CAAC;MAAA;MAC3C,IAAI,CAACG,OAAO,CAACK,UAAU,GAAG,UAAC5Q,GAAG;QAAA,OAAKyQ,OAAO,CAACC,GAAG,kCAAAvE,MAAA,CAASnM,GAAG,CAAE,CAAC;MAAA;MAC7D,IAAI,CAACuQ,OAAO,CAACM,OAAO,GAAG,UAAC7Q,GAAG;QAAA,OAAKyQ,OAAO,CAACC,GAAG,kCAAAvE,MAAA,CAASnM,GAAG,CAAE,CAAC;MAAA;IAC5D;;IAEA;AACF;AACA;EAFE;IAAAS,GAAA;IAAAC,KAAA;MAAA,IAAAoQ,cAAA,GAAAhH,mFAAA,eAAAC,sEAAA,CAGA,SAAAY,QAAA;QAAA,IAAAoG,mBAAA;UAAA7G,MAAA;QAAA,OAAAH,sEAAA,UAAAkB,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAZ,IAAA,GAAAY,QAAA,CAAAX,IAAA;YAAA;cACE,IAAI,CAACyG,aAAa,GAAG,IAAI5N,gDAAa,CAAC,IAAI,CAACmN,OAAO,CAAC;cAACrF,QAAA,CAAAX,IAAA;cAAA,OAC/CtK,8CAAS,aAATA,8CAAS,wBAAA8Q,mBAAA,GAAT9Q,8CAAS,CAAEH,QAAQ,cAAAiR,mBAAA,uBAAnBA,mBAAA,CAAqB7B,OAAO,CAAC,UAACtE,IAAI,EAAK;gBAC3CV,MAAI,CAAC8G,aAAa,CAACzD,IAAI,CAAC3C,IAAI,CAAC5K,GAAG,EAAE,UAACiR,MAAM,EAAK;kBAC5C/G,MAAI,CAACpK,QAAQ,CAAC8K,IAAI,CAAC7K,IAAI,CAAC,GAAGkR,MAAM;gBACnC,CAAC,CAAC;cACJ,CAAC,CAAC;YAAA;YAAA;cAAA,OAAA/F,QAAA,CAAAU,IAAA;UAAA;QAAA,GAAAjB,OAAA;MAAA,CACH;MAAA,SAAA2F,cAAA;QAAA,OAAAQ,cAAA,CAAAhF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAuE,aAAA;IAAA;EAAA;EAAA,OAAAH,SAAA;AAAA;AAGH,iEAAeA,SAAS;;;;;;;;;;;;;;;;;;;;ACnC4B;AAAA,IAE9CgB,KAAK;EACT,SAAAA,MAAYhN,OAAO,EAAE;IAAA9D,iFAAA,OAAA8Q,KAAA;IACnB,IAAI,CAACC,OAAO,GAAG,IAAIF,8DAAY,CAAC,CAAC;IACjC;IACA,IAAI,CAACG,aAAa,GAAGlN,OAAO,CAAChF,GAAG;IAEhC,IAAI,CAACmS,QAAQ,GAAG;MACdC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE;IACV,CAAC;IAED,IAAI,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC;IACpC3Q,MAAM,CAAC4Q,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACF,MAAM,CAAC;IAC9C,IAAI,CAACA,MAAM,CAAC,CAAC;EACf;;EAEA;AACF;AACA;AACA;AACA;EAJEjR,8EAAA,CAAA2Q,KAAA;IAAA1Q,GAAA;IAAAC,KAAA,EAKA,SAAAkR,IAAIC,KAAK,EAAEC,GAAG,EAAE;MACd,IAAI,CAACV,OAAO,CAACW,EAAE,CAACF,KAAK,EAAE,YAAM;QAC3BC,GAAG,CAAC,CAAC;MACP,CAAC,CAAC;IACJ;EAAC;IAAArR,GAAA;IAAAC,KAAA,EAED,SAAA+Q,OAAA,EAAS;MACP;MACA,IAAI,CAACH,QAAQ,CAACC,KAAK,GAAG,IAAI,CAACF,aAAa,CAACW,WAAW;MACpD,IAAI,CAACV,QAAQ,CAACE,MAAM,GAAG,IAAI,CAACH,aAAa,CAACY,YAAY;MACtD,IAAI,CAACb,OAAO,CAACc,IAAI,CAAC,QAAQ,CAAC;IAC7B;EAAC;EAAA,OAAAf,KAAA;AAAA;AAGH,iEAAeA,KAAK;;;;;;;;;;;;;;ACrCpB,iEAAe,CACb;EACEhG,UAAU,EAAE;IACVpL,IAAI,EAAE,IAAI;IACVsL,CAAC,EAAE,SAAS;IACZD,CAAC,EAAE;EACL,CAAC;EACDM,QAAQ,EAAE,CACR;IACE3L,IAAI,EAAE,IAAI;IACVsL,CAAC,EAAE,EAAE;IAAE;IACPD,CAAC,EAAE,kBAAkB,CAAE;EACzB,CAAC,EACD;IACErL,IAAI,EAAE,MAAM;IACZsL,CAAC,EAAE,CAAC,iBAAiB;IACrBD,CAAC,EAAE;EACL,CAAC,EAED;IACErL,IAAI,EAAE,UAAU;IAChBsL,CAAC,EAAE,MAAM;IACTD,CAAC,EAAE;EACL,CAAC,EAED;IACErL,IAAI,EAAE,KAAK;IACXsL,CAAC,EAAE,EAAE;IACLD,CAAC,EAAE;EACL,CAAC,EACD;IACErL,IAAI,EAAE,KAAK;IACXsL,CAAC,EAAE,EAAE;IACLD,CAAC,EAAE;EACL,CAAC,EACD;IACErL,IAAI,EAAE,IAAI;IACVsL,CAAC,EAAE,kBAAkB;IACrBD,CAAC,EAAE;EACL,CAAC,EACD;IACErL,IAAI,EAAE,IAAI;IACVsL,CAAC,EAAE,kBAAkB;IACrBD,CAAC,EAAE;EACL,CAAC,EACD;IACErL,IAAI,EAAE,IAAI;IACVsL,CAAC,EAAE,CAAC,gBAAgB;IACpBD,CAAC,EAAE;EACL,CAAC;AAEL,CAAC,EACD;EACED,UAAU,EAAE;IACVpL,IAAI,EAAE,IAAI;IACVsL,CAAC,EAAE,QAAQ;IACXD,CAAC,EAAE;EACL,CAAC;EACDM,QAAQ,EAAE,CACR;IACE3L,IAAI,EAAE,IAAI;IACVsL,CAAC,EAAE,SAAS;IAAE;IACdD,CAAC,EAAE,SAAS,CAAE;EAChB,CAAC,EACD;IACErL,IAAI,EAAE,IAAI;IACVsL,CAAC,EAAE,SAAS;IACZD,CAAC,EAAE;EACL,CAAC,EAED;IACErL,IAAI,EAAE,IAAI;IACVsL,CAAC,EAAE,SAAS;IACZD,CAAC,EAAE;EACL,CAAC,EAED;IACErL,IAAI,EAAE,IAAI;IACVsL,CAAC,EAAE,SAAS;IACZD,CAAC,EAAE;EACL,CAAC;AAEL,CAAC,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnF2B;AACA;AACQ;AACR;AACK;AAAA,IAE3BlM,KAAK;EACT,SAAAA,MAAYkT,MAAM,EAAE;IAAA,IAAA3M,KAAA;IAAApF,iFAAA,OAAAnB,KAAA;IAClB,IAAI,CAACkT,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,KAAK,GAAG,IAAIjS,8CAAK,CAACgS,MAAM,CAACjT,GAAG,CAAC;IAClC,IAAI,CAACiC,QAAQ,GAAG,IAAI,CAACiR,KAAK,CAACjR,QAAQ;IACnC,IAAI,CAACT,KAAK,GAAG,IAAI,CAAC0R,KAAK,CAAC1R,KAAK;IAC7B,IAAI,CAACE,MAAM,GAAG,IAAI,CAACwR,KAAK,CAACxR,MAAM;IAC/B,IAAI,CAACgB,QAAQ,GAAG,IAAI,CAACwQ,KAAK,CAACxQ,QAAQ;;IAEnC;IACA,IAAI,CAACyQ,KAAK,GAAG,IAAInB,8CAAK,CAAC;MAAEhS,GAAG,EAAEiT,MAAM,CAACjT;IAAI,CAAC,CAAC;IAC3C,IAAI,CAACmT,KAAK,CAACV,GAAG,CAAC,QAAQ,EAAE,YAAM;MAC7BnM,KAAI,CAACrE,QAAQ,CAACM,OAAO,CACnB6Q,MAAM,CAAC9M,KAAI,CAAC6M,KAAK,CAAChB,QAAQ,CAACC,KAAK,CAAC,EACjCgB,MAAM,CAAC9M,KAAI,CAAC6M,KAAK,CAAChB,QAAQ,CAACE,MAAM,CACnC,CAAC;MACD/L,KAAI,CAAC5E,MAAM,CAAC2R,MAAM,GAChBD,MAAM,CAAC9M,KAAI,CAAC6M,KAAK,CAAChB,QAAQ,CAACC,KAAK,CAAC,GAAGgB,MAAM,CAAC9M,KAAI,CAAC6M,KAAK,CAAChB,QAAQ,CAACE,MAAM,CAAC;MACxE/L,KAAI,CAAC5E,MAAM,CAAC4R,sBAAsB,CAAC,CAAC;IACtC,CAAC,CAAC;IACF;IACA,IAAI,CAACxS,SAAS,GAAG,IAAIkQ,kDAAS,eAAArG,mFAAA,eAAAC,sEAAA,CAAC,SAAAY,QAAA;MAAA,OAAAZ,sEAAA,UAAAkB,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAZ,IAAA,GAAAY,QAAA,CAAAX,IAAA;UAAA;YAAAW,QAAA,CAAAX,IAAA;YAAA,OACvB9E,KAAI,CAACG,WAAW,CAAC,CAAC;UAAA;YACxBH,KAAI,CAACgK,MAAM,CAAC,CAAC;UAAC;UAAA;YAAA,OAAAvE,QAAA,CAAAU,IAAA;QAAA;MAAA,GAAAjB,OAAA;IAAA,CACf,GAAC;EACJ;;EAEA;EAAAnK,8EAAA,CAAAtB,KAAA;IAAAuB,GAAA;IAAAC,KAAA;MAAA,IAAAgS,YAAA,GAAA5I,mFAAA,eAAAC,sEAAA,CACA,SAAAE,SAAA;QAAA,IAAA0I,OAAA;QAAA,OAAA5I,sEAAA,UAAAK,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;YAAA;cACE,IAAI,CAAC1K,KAAK,GAAG,IAAIqE,8CAAK,CAAC;gBACrBuG,IAAI,EAAE0H,oDAAI;gBACVhT,GAAG,EAAE,IAAI,CAACiT,MAAM,CAACjT,GAAG;gBACpBW,QAAQ,EAAE,IAAI,CAACG,SAAS,CAACH,QAAQ;gBACjCD,KAAK,EAAE;kBACL0G,MAAM,EAAE,EAAE;kBACVsJ,WAAW,EAAE,KAAK;kBAClBrL,UAAU,EAAE;gBACd,CAAC;gBACD6J,SAAS,EAAE;kBACThI,IAAI,EAAE,IAAI;kBACVwJ,WAAW,EAAE,CAAC,IAAI;kBAClB9I,IAAI,EAAE,CAAC;kBACP4G,MAAM,EAAE;gBACV,CAAC;gBACDpC,WAAW,EAAE;kBACXC,WAAW,EAAE,QAAQ;kBACrBoH,WAAW,EAAE;oBACXC,UAAU,EAAE,QAAQ;oBAAE;oBACtBC,QAAQ,EAAE,QAAQ,CAAE;kBACtB;gBACF,CAAC;;gBACDzD,OAAO,EAAE;kBACP3I,KAAK,EAAE,QAAQ;kBAAE;kBACjBqM,YAAY,EAAE,QAAQ;kBAAE;kBACxBhD,KAAK,EAAE,KAAK,CAAE;gBAChB;cACF,CAAC,CAAC;;cACF,IAAI,CAACpP,KAAK,CAAC4D,GAAG,CAAC,IAAI,CAAC1E,KAAK,CAACuE,KAAK,CAAC;cAACiG,SAAA,CAAAE,IAAA;cAAA,OAC3B,IAAI,CAAC1K,KAAK,CAAC2F,IAAI,CAAC,CAAC;YAAA;cACvB;cACMmN,OAAO,GAAGvT,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;cAClDsT,OAAO,CAACK,SAAS,CAACzO,GAAG,CAAC,KAAK,CAAC;YAAC;YAAA;cAAA,OAAA8F,SAAA,CAAAuB,IAAA;UAAA;QAAA,GAAA3B,QAAA;MAAA,CAC9B;MAAA,SAAArE,YAAA;QAAA,OAAA8M,YAAA,CAAA5G,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAnG,WAAA;IAAA;IAED;AACF;AACA;EAFE;IAAAnF,GAAA;IAAAC,KAAA,EAGA,SAAA+O,OAAA,EAAS;MACPwD,qBAAqB,CAAC,IAAI,CAACxD,MAAM,CAACiC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7C,IAAI,CAACtQ,QAAQ,CAACqO,MAAM,CAAC,IAAI,CAAC9O,KAAK,EAAE,IAAI,CAACE,MAAM,CAAC;MAC7C,IAAI,CAACgB,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACqR,MAAM,CAAC,CAAC;MACvC,IAAI,CAACrT,KAAK,IAAI,IAAI,CAACA,KAAK,CAAC4P,MAAM,CAAC,CAAC;IACnC;EAAC;EAAA,OAAAvQ,KAAA;AAAA;AAGH,iEAAeA,KAAK;;;;;;;;;;;;;;ACjFpB,iEAAe,wBAAwB,uBAAuB,wBAAwB,uBAAuB,oBAAoB,yBAAyB,iCAAiC,wBAAwB,qCAAqC,gCAAgC,wBAAwB,gFAAgF,6CAA6C,0FAA0F,uEAAuE,OAAO,kEAAkE,oBAAoB,0DAA0D,KAAK;;;;;;;;;;;;;;ACA1uB,iEAAe,sBAAsB,yBAAyB,oBAAoB,iCAAiC,oBAAoB,eAAe,oDAAoD,8BAA8B,iFAAiF,+EAA+E,KAAK","sources":["webpack://wealth/./src/pages/Vector/threejs/components/3dEarth/index.js","webpack://wealth/./src/pages/Vector/threejs/components/3dEarth/world/Assets.js","webpack://wealth/./src/pages/Vector/threejs/components/3dEarth/world/Basic.js","webpack://wealth/./src/pages/Vector/threejs/components/3dEarth/world/Earth.js","webpack://wealth/./src/pages/Vector/threejs/components/3dEarth/world/Resources.js","webpack://wealth/./src/pages/Vector/threejs/components/3dEarth/world/Sizes.js","webpack://wealth/./src/pages/Vector/threejs/components/3dEarth/world/assets/Data.js","webpack://wealth/./src/pages/Vector/threejs/components/3dEarth/world/index.js","webpack://wealth/./src/pages/Vector/threejs/components/3dEarth/shaders/earth/fragment.fs","webpack://wealth/./src/pages/Vector/threejs/components/3dEarth/shaders/earth/vertex.vs"],"sourcesContent":["import World from './world';\r\n\r\nconst dom = document.querySelector('#earth-canvas');\r\n\r\nnew World({ dom });\r\n","import gradient from './assets/gradient.png';\r\nimport redCircle from './assets/redCircle.png';\r\nimport label from './assets/label.png';\r\nimport aperture from './assets/aperture.png';\r\nimport glow from './assets/glow.png';\r\nimport light_column from './assets/light_column.png';\r\nimport aircraft from './assets/aircraft.png';\r\nimport earth from './assets/earth.jpg';\r\n\r\nconst textures = [\r\n  {\r\n    name: 'gradient',\r\n    url: gradient,\r\n  },\r\n  {\r\n    name: 'redCircle',\r\n    url: redCircle,\r\n  },\r\n  {\r\n    name: 'label',\r\n    url: label,\r\n  },\r\n  {\r\n    name: 'aperture',\r\n    url: aperture,\r\n  },\r\n\r\n  {\r\n    name: 'glow',\r\n    url: glow,\r\n  },\r\n  {\r\n    name: 'light_column',\r\n    url: light_column,\r\n  },\r\n  {\r\n    name: 'aircraft',\r\n    url: aircraft,\r\n  },\r\n  {\r\n    name: 'earth',\r\n    url: earth,\r\n  },\r\n];\r\n\r\n// 今天静态资源信息\r\nexport const resources = {\r\n  textures,\r\n};\r\n","/**\r\n * 创建 threejs 四大上古神器\r\n * 场景、相机、渲染器、控制器\r\n */\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\nclass Basic {\r\n  constructor(dom) {\r\n    this.dom = dom;\r\n    this.initSences();\r\n    this.setControls();\r\n  }\r\n  /**\r\n   * 初始化场景\r\n   */\r\n  initSences() {\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      45,\r\n      window.innerWidth / window.innerHeight,\r\n      1,\r\n      100000,\r\n    );\r\n\r\n    this.camera.position.set(0, 30, -250);\r\n\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      alpha: true, //透明\r\n      antialias: true, //抗锯齿\r\n    });\r\n\r\n    this.renderer.setPixelRatio(window.devicePixelRatio); // 设置屏幕像素比\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight); // 设置渲染器宽高\r\n    this.dom.appendChild(this.renderer.domElement);\r\n  }\r\n\r\n  /**\r\n   * 设置控制器\r\n   */\r\n  setControls() {\r\n    // 鼠标控制      相机，渲染dom\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.controls.autoRotateSpeed = 3;\r\n    // 使动画循环使用时阻尼或自转 意思是否有惯性\r\n    this.controls.enableDamping = true;\r\n    // 动态阻尼系数 就是鼠标拖拽旋转灵敏度\r\n    this.controls.dampingFactor = 0.05;\r\n    // 是否可以缩放\r\n    this.controls.enableZoom = true;\r\n    // 设置相机距离原点的最近距离\r\n    this.controls.minDistance = 100;\r\n    // 设置相机距离原点的最远距离\r\n    this.controls.maxDistance = 300;\r\n    // 是否开启右键拖拽\r\n    this.controls.enablePan = true;\r\n  }\r\n}\r\n\r\nexport default Basic;\r\n","import gsap from 'gsap/gsap-core';\r\nimport {\r\n  Group,\r\n  SphereGeometry,\r\n  PointsMaterial,\r\n  Points,\r\n  Color,\r\n  ShaderMaterial,\r\n  Mesh,\r\n  Vector3,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  SpriteMaterial,\r\n  Sprite,\r\n  NormalBlending,\r\n  MeshBasicMaterial,\r\n  TextureLoader,\r\n  DoubleSide,\r\n  BoxGeometry,\r\n} from 'three';\r\nimport earthFragment from '../shaders/earth/fragment.fs';\r\nimport earthVertex from '../shaders/earth/vertex.vs';\r\nimport {\r\n  createAnimateLine,\r\n  createLightPillar,\r\n  createPointMesh,\r\n  createWaveMesh,\r\n  getCirclePoints,\r\n  lon2xyz,\r\n} from '../Utils/common';\r\nimport { flyArc } from '../Utils/arc';\r\nimport html2canvas from 'html2canvas';\r\nimport { randomHexColor } from '@/utils/common';\r\n\r\nclass Earth {\r\n  constructor(options) {\r\n    this.options = options;\r\n    this.group = new Group();\r\n    this.group.name = 'group';\r\n    this.group.scale.set(0, 0, 0);\r\n    // 地球\r\n    this.earthGroup = new Group();\r\n    this.group.add(this.earthGroup);\r\n    this.earthGroup.name = 'EarthGroup';\r\n    // 地球自转\r\n    this.isRotation = this.options.earth.isRotation;\r\n    // 扫光动画 shader\r\n    this.timeValue = 100;\r\n    this.uniforms = {\r\n      glowColor: {\r\n        value: new Color(0x0cd1eb),\r\n      },\r\n      scale: {\r\n        type: 'f',\r\n        value: -1.0,\r\n      },\r\n      bias: {\r\n        type: 'f',\r\n        value: 1.0,\r\n      },\r\n      power: {\r\n        type: 'f',\r\n        value: 3.3,\r\n      },\r\n      time: {\r\n        type: 'f',\r\n        value: this.timeValue,\r\n      },\r\n      isHover: {\r\n        value: false,\r\n      },\r\n      map: {\r\n        value: null,\r\n      },\r\n    };\r\n\r\n    // 标注点效果\r\n    this.markupPoint = new Group();\r\n    this.markupPoint.name = 'markupPoint';\r\n    this.waveMeshArr = [];\r\n\r\n    // 卫星和标签\r\n    this.circleLineList = [];\r\n    this.circleList = [];\r\n    this.x = 0;\r\n    this.n = 0;\r\n  }\r\n\r\n  init() {\r\n    return new Promise((resolve) => {\r\n      this.createEarth(); // 创建地球\r\n      this.createStars(); // 创建星星\r\n      this.createRandomStars();\r\n      this.createEarthGlow(); // 创建光晕\r\n      this.createEarthAperture(); // 创建地球的大气层\r\n      this.createMarkupPoint(); // 创建柱状点位\r\n      this.createSpriteLabel(); // 创建标签\r\n      this.createAnimateCircle(); // 创建环绕卫星\r\n      this.createFlyLine(); // 创建飞线\r\n      this.show();\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 创建地球\r\n   */\r\n  createEarth() {\r\n    const earth_geometry = new SphereGeometry(\r\n      this.options.earth.radius,\r\n      50,\r\n      50,\r\n    );\r\n\r\n    const earth_border = new SphereGeometry(\r\n      this.options.earth.radius + 10,\r\n      60,\r\n      60,\r\n    );\r\n\r\n    const pointMaterial = new PointsMaterial({\r\n      color: 0x81ffff, //设置颜色，默认 0xFFFFFF\r\n      transparent: true,\r\n      sizeAttenuation: true,\r\n      opacity: 0.2,\r\n      vertexColors: false, //定义材料是否使用顶点颜色，默认false ---如果该选项设置为true，则color属性失效\r\n      size: 0.03, //定义粒子的大小。默认为1.0\r\n    });\r\n\r\n    const points = new Points(earth_border, pointMaterial); //将模型添加到场景\r\n\r\n    this.earthGroup.add(points);\r\n\r\n    this.uniforms.map.value = this.options.textures.earth;\r\n\r\n    const earth_material = new ShaderMaterial({\r\n      // wireframe:true, // 显示模型线条\r\n      uniforms: this.uniforms,\r\n      vertexShader: earthVertex,\r\n      fragmentShader: earthFragment,\r\n    });\r\n    earth_material.needsUpdate = true;\r\n    this.earth = new Mesh(earth_geometry, earth_material);\r\n    this.earth.name = 'earth';\r\n    this.earthGroup.add(this.earth);\r\n  }\r\n\r\n  /**\r\n   * 创建星星\r\n   */\r\n  createStars() {\r\n    const vertices = [];\r\n    const colors = [];\r\n    for (let i = 0; i < 5000; i++) {\r\n      const vertex = new Vector3();\r\n      vertex.x = 800 * Math.random() - 300;\r\n      vertex.y = 800 * Math.random() - 300;\r\n      vertex.z = 800 * Math.random() - 300;\r\n      vertices.push(vertex.x, vertex.y, vertex.z);\r\n      colors.push(new Color(1, 1, 1));\r\n    }\r\n\r\n    // 星空效果\r\n    this.around = new BufferGeometry();\r\n    this.around.setAttribute(\r\n      'position',\r\n      new BufferAttribute(new Float32Array(vertices), 3),\r\n    );\r\n    this.around.setAttribute(\r\n      'color',\r\n      new BufferAttribute(new Float32Array(colors), 3),\r\n    );\r\n\r\n    const aroundMaterial = new PointsMaterial({\r\n      side: 2,\r\n      sizeAttenuation: true,\r\n      color: 0x4d76cf,\r\n      transparent: true,\r\n      opacity: 1,\r\n      map: this.options.textures.gradient,\r\n    });\r\n\r\n    this.aroundPoints = new Points(this.around, aroundMaterial);\r\n    this.aroundPoints.name = '星空';\r\n    this.aroundPoints.scale.set(1, 1, 1);\r\n    this.group.add(this.aroundPoints);\r\n  }\r\n\r\n  createRandomStars() {\r\n    this.stars = new Group();\r\n    const geometry = new BoxGeometry(1, 1, 1);\r\n    for (let i = 0; i < 600; i += 1) {\r\n      const x0 = Math.random() - 0.5;\r\n      const y0 = Math.random() - 0.5;\r\n      const z0 = Math.random() - 0.5;\r\n      const starRadius =\r\n        this.options.earth.radius * 2 +\r\n        (Math.random() - 0.5) * this.options.earth.radius * 0.6;\r\n      const vectorRadius = Math.sqrt(x0 ** 2 + y0 ** 2 + z0 ** 2);\r\n      const starPosition = new Vector3(\r\n        (x0 * starRadius) / vectorRadius,\r\n        (y0 * starRadius) / vectorRadius,\r\n        (z0 * starRadius) / vectorRadius,\r\n      );\r\n      const material = new MeshBasicMaterial({\r\n        color: new Color(randomHexColor()),\r\n        transparent: true,\r\n        opacity: Math.random() * 0.8,\r\n      });\r\n      const cube = new Mesh(geometry, material);\r\n      cube.position.x = starPosition.x;\r\n      cube.position.y = starPosition.y;\r\n      cube.position.z = starPosition.z;\r\n      cube.rotation.x = Math.random() * 2 * Math.PI;\r\n      cube.rotation.y = Math.random() * 2 * Math.PI;\r\n      cube.rotation.z = Math.random() * 2 * Math.PI;\r\n      const scale = Math.random() + 0.2;\r\n      cube.scale.x = scale;\r\n      cube.scale.y = scale;\r\n      cube.scale.z = scale;\r\n      cube.needsUpdate = true;\r\n      this.stars.add(cube);\r\n    }\r\n    this.earth.add(this.stars);\r\n  }\r\n\r\n  /**\r\n   * 创建光晕\r\n   */\r\n  createEarthGlow() {\r\n    const R = this.options.earth.radius; //地球半径\r\n    const texture = this.options.textures.glow; // 加载纹理贴图\r\n    const spriteMaterial = new SpriteMaterial({\r\n      map: texture, // 设置精灵纹理贴图\r\n      transparent: true, //开启透明\r\n      color: 0x4390d1,\r\n      opacity: 0.7, // 可以通过透明度整体调节光圈\r\n      depthWrite: false, //禁止写入深度缓冲区数据\r\n    });\r\n\r\n    // 创建表示地球光圈的精灵模型\r\n    const sprite = new Sprite(spriteMaterial);\r\n    sprite.scale.set(R * 3, R * 3, 1);\r\n    this.earthGroup.add(sprite);\r\n  }\r\n\r\n  /**\r\n   * 创建地球的大气层\r\n   */\r\n  createEarthAperture() {\r\n    const vertexShader = [\r\n      'varying vec3\tvVertexWorldPosition;',\r\n      'varying vec3\tvVertexNormal;',\r\n      'varying vec4\tvFragColor;',\r\n      'void main(){',\r\n      '\tvVertexNormal\t= normalize(normalMatrix * normal);', //将法线转换到视图坐标系中\r\n      '\tvVertexWorldPosition\t= (modelMatrix * vec4(position, 1.0)).xyz;', //将顶点转换到世界坐标系中\r\n      '\t// set gl_Position',\r\n      '\tgl_Position\t= projectionMatrix * modelViewMatrix * vec4(position, 1.0);',\r\n      '}',\r\n    ].join('\\n');\r\n\r\n    //大气层效果\r\n    const AeroSphere = {\r\n      uniforms: {\r\n        coeficient: {\r\n          type: 'f',\r\n          value: 1.0,\r\n        },\r\n        power: {\r\n          type: 'f',\r\n          value: 3,\r\n        },\r\n        glowColor: {\r\n          type: 'c',\r\n          value: new Color(0x4390d1),\r\n        },\r\n      },\r\n      vertexShader,\r\n      fragmentShader: [\r\n        'uniform vec3\tglowColor;',\r\n        'uniform float\tcoeficient;',\r\n        'uniform float\tpower;',\r\n\r\n        'varying vec3\tvVertexNormal;',\r\n        'varying vec3\tvVertexWorldPosition;',\r\n\r\n        'varying vec4\tvFragColor;',\r\n\r\n        'void main(){',\r\n        '\tvec3 worldCameraToVertex = vVertexWorldPosition - cameraPosition;', //世界坐标系中从相机位置到顶点位置的距离\r\n        '\tvec3 viewCameraToVertex\t= (viewMatrix * vec4(worldCameraToVertex, 0.0)).xyz;', //视图坐标系中从相机位置到顶点位置的距离\r\n        '\tviewCameraToVertex= normalize(viewCameraToVertex);', //规一化\r\n        '\tfloat intensity\t= pow(coeficient + dot(vVertexNormal, viewCameraToVertex), power);',\r\n        '\tgl_FragColor = vec4(glowColor, intensity);',\r\n        '}',\r\n      ].join('\\n'),\r\n    };\r\n\r\n    //球体 辉光 大气层\r\n    const material = new ShaderMaterial({\r\n      uniforms: AeroSphere.uniforms,\r\n      vertexShader: AeroSphere.vertexShader,\r\n      fragmentShader: AeroSphere.fragmentShader,\r\n      blending: NormalBlending,\r\n      transparent: true,\r\n      depthWrite: false,\r\n    });\r\n\r\n    const sphere = new SphereGeometry(this.options.earth.radius + 0, 50, 50);\r\n    const mesh = new Mesh(sphere, material);\r\n    this.earthGroup.add(mesh);\r\n  }\r\n\r\n  /**\r\n   * 创建柱状点位\r\n   */\r\n  async createMarkupPoint() {\r\n    await Promise.all(\r\n      this.options.data.map(async (item) => {\r\n        const radius = this.options.earth.radius;\r\n        const lon = item.startArray.E; //经度\r\n        const lat = item.startArray.N; //纬度\r\n        this.punctuationMaterial = new MeshBasicMaterial({\r\n          color: this.options.punctuation.circleColor,\r\n          map: this.options.textures.label,\r\n          transparent: true,\r\n          depthWrite: false, //禁止写入深度缓冲区数据\r\n        });\r\n\r\n        //光柱底座矩形平面\r\n        const mesh = createPointMesh({\r\n          radius,\r\n          lon,\r\n          lat,\r\n          material: this.punctuationMaterial,\r\n        });\r\n        this.markupPoint.add(mesh);\r\n\r\n        // 创建光柱\r\n        const LightPillar = createLightPillar({\r\n          radius: this.options.earth.radius,\r\n          lon,\r\n          lat,\r\n          index: 0,\r\n          textures: this.options.textures,\r\n          punctuation: this.options.punctuation,\r\n        });\r\n        this.markupPoint.add(LightPillar);\r\n\r\n        //波动光圈\r\n        const WaveMesh = createWaveMesh({\r\n          radius,\r\n          lon,\r\n          lat,\r\n          textures: this.options.textures,\r\n        });\r\n        this.markupPoint.add(WaveMesh);\r\n        this.waveMeshArr.push(WaveMesh);\r\n\r\n        await Promise.all(\r\n          item.endArray.map((obj) => {\r\n            const lon = obj.E; //经度\r\n            const lat = obj.N; //纬度\r\n            //光柱底座矩形平面\r\n            const mesh = createPointMesh({\r\n              radius,\r\n              lon,\r\n              lat,\r\n              material: this.punctuationMaterial,\r\n            });\r\n            this.markupPoint.add(mesh);\r\n\r\n            //光柱\r\n            const LightPillar = createLightPillar({\r\n              radius: this.options.earth.radius,\r\n              lon,\r\n              lat,\r\n              index: 1,\r\n              textures: this.options.textures,\r\n              punctuation: this.options.punctuation,\r\n            });\r\n            this.markupPoint.add(LightPillar);\r\n\r\n            //波动光圈\r\n            const WaveMesh = createWaveMesh({\r\n              radius,\r\n              lon,\r\n              lat,\r\n              textures: this.options.textures,\r\n            });\r\n            this.markupPoint.add(WaveMesh);\r\n            this.waveMeshArr.push(WaveMesh);\r\n          }),\r\n        );\r\n\r\n        this.earthGroup.add(this.markupPoint);\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 创建标签\r\n   */\r\n  createSpriteLabel() {\r\n    Promise.all(\r\n      this.options.data.map((item) => {\r\n        let cityArray = [];\r\n        cityArray.push(item.startArray);\r\n        cityArray = cityArray.concat(...item.endArray);\r\n        Promise.all(\r\n          cityArray.map(async (e) => {\r\n            const p = lon2xyz(this.options.earth.radius * 1.001, e.E, e.N);\r\n            const div = `<div class=\"fire-div\">${e.name}</div>`;\r\n            const shareContent = document.getElementById('html2canvas');\r\n            shareContent.innerHTML = div;\r\n            const opts = {\r\n              backgroundColor: null, // 背景透明\r\n              scale: 6,\r\n              dpi: window.devicePixelRatio,\r\n            };\r\n            const canvas = await html2canvas(\r\n              document.getElementById('html2canvas'),\r\n              opts,\r\n            );\r\n            const dataURL = canvas.toDataURL('image/png');\r\n            const map = new TextureLoader().load(dataURL);\r\n            const material = new SpriteMaterial({\r\n              map: map,\r\n              transparent: true,\r\n            });\r\n            const sprite = new Sprite(material);\r\n            const len = 5 + (e.name.length - 2) * 2;\r\n            sprite.scale.set(len, 3, 1);\r\n            sprite.position.set(p.x * 1.1, p.y * 1.1, p.z * 1.1);\r\n            this.earth.add(sprite);\r\n          }),\r\n        );\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 创建环绕卫星\r\n   */\r\n  createAnimateCircle() {\r\n    const list = getCirclePoints({\r\n      radius: this.options.earth.radius + 15,\r\n      number: 150, //切割数\r\n      closed: true, // 闭合\r\n    });\r\n\r\n    const mat = new MeshBasicMaterial({\r\n      color: '#0c3172',\r\n      transparent: true,\r\n      opacity: 0.4,\r\n      side: DoubleSide,\r\n    });\r\n\r\n    const line = createAnimateLine({\r\n      pointList: list,\r\n      material: mat,\r\n      number: 100,\r\n      radius: 0.1,\r\n    });\r\n\r\n    this.earthGroup.add(line);\r\n\r\n    // 在clone两条线出来\r\n    const l2 = line.clone();\r\n    l2.scale.set(1.2, 1.2, 1.2);\r\n    l2.rotateZ(Math.PI / 6);\r\n    this.earthGroup.add(l2);\r\n\r\n    const l3 = line.clone();\r\n    l3.scale.set(0.8, 0.8, 0.8);\r\n    l3.rotateZ(-Math.PI / 6);\r\n    this.earthGroup.add(l3);\r\n\r\n    /**\r\n     * 旋转的球\r\n     */\r\n    const ball = new Mesh(\r\n      new SphereGeometry(this.options.satellite.size, 32, 32),\r\n      new MeshBasicMaterial({\r\n        color: '#e0b187', // 745F4D\r\n      }),\r\n    );\r\n\r\n    const ball2 = new Mesh(\r\n      new SphereGeometry(this.options.satellite.size, 32, 32),\r\n      new MeshBasicMaterial({\r\n        color: '#628fbb', // 324A62\r\n      }),\r\n    );\r\n\r\n    const ball3 = new Mesh(\r\n      new SphereGeometry(this.options.satellite.size, 32, 32),\r\n      new MeshBasicMaterial({\r\n        color: '#806bdf', //6D5AC4\r\n      }),\r\n    );\r\n\r\n    this.circleLineList.push(line, l2, l3);\r\n    ball.name = ball2.name = ball3.name = '卫星';\r\n\r\n    for (let i = 0; i < this.options.satellite.number; i++) {\r\n      const ball01 = ball.clone();\r\n      // 一根线上总共有几个球，根据数量平均分布一下\r\n      const num = Math.floor(list.length / this.options.satellite.number);\r\n      ball01.position.set(\r\n        list[num * (i + 1)][0] * 1,\r\n        list[num * (i + 1)][1] * 1,\r\n        list[num * (i + 1)][2] * 1,\r\n      );\r\n      line.add(ball01);\r\n\r\n      const ball02 = ball2.clone();\r\n      const num02 = Math.floor(list.length / this.options.satellite.number);\r\n      ball02.position.set(\r\n        list[num02 * (i + 1)][0] * 1,\r\n        list[num02 * (i + 1)][1] * 1,\r\n        list[num02 * (i + 1)][2] * 1,\r\n      );\r\n      l2.add(ball02);\r\n\r\n      const ball03 = ball2.clone();\r\n      const num03 = Math.floor(list.length / this.options.satellite.number);\r\n      ball03.position.set(\r\n        list[num03 * (i + 1)][0] * 1,\r\n        list[num03 * (i + 1)][1] * 1,\r\n        list[num03 * (i + 1)][2] * 1,\r\n      );\r\n      l3.add(ball03);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 创建飞线\r\n   */\r\n  createFlyLine() {\r\n    this.flyLineArcGroup = new Group();\r\n    this.flyLineArcGroup.userData['flyLineArray'] = [];\r\n    this.earthGroup.add(this.flyLineArcGroup);\r\n\r\n    this.options.data.forEach((cities) => {\r\n      cities.endArray.forEach((item) => {\r\n        // 调用函数flyArc绘制球面上任意两点之间飞线圆弧轨迹\r\n        const arcline = flyArc(\r\n          this.options.earth.radius,\r\n          cities.startArray.E,\r\n          cities.startArray.N,\r\n          item.E,\r\n          item.N,\r\n          this.options.flyLine,\r\n        );\r\n        this.flyLineArcGroup.add(arcline); // 飞线插入flyArcGroup中\r\n        this.flyLineArcGroup.userData['flyLineArray'].push(\r\n          arcline.userData['flyLine'],\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 渲染显示\r\n   */\r\n  show() {\r\n    gsap.to(this.group.scale, {\r\n      x: 1.2,\r\n      y: 1.2,\r\n      z: 1.2,\r\n      duration: 3,\r\n      ease: 'Quadratic',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // 地球自转\r\n    if (this.isRotation) {\r\n      this.earthGroup.rotation.y += this.options.earth.rotateSpeed;\r\n    }\r\n\r\n    // 幽灵👻光晕\r\n    this.uniforms.time.value =\r\n      this.uniforms.time.value < -this.timeValue\r\n        ? this.timeValue\r\n        : this.uniforms.time.value - 1;\r\n\r\n    // 飞行线\r\n    this.flyLineArcGroup?.userData['flyLineArray']?.forEach((fly) => {\r\n      fly.rotation.z += this.options.flyLine.speed; // 调节飞线速度\r\n      if (fly.rotation.z >= fly.flyEndAngle) fly.rotation.z = 0;\r\n    });\r\n\r\n    this.circleLineList.forEach((e) => {\r\n      e.rotateY(this.options.satellite.rotateSpeed);\r\n    });\r\n\r\n    if (this.waveMeshArr.length) {\r\n      this.waveMeshArr.forEach((mesh) => {\r\n        mesh.userData['scale'] += 0.007;\r\n        mesh.scale.set(\r\n          mesh.userData['size'] * mesh.userData['scale'],\r\n          mesh.userData['size'] * mesh.userData['scale'],\r\n          mesh.userData['size'] * mesh.userData['scale'],\r\n        );\r\n        if (mesh.userData['scale'] <= 1.5) {\r\n          mesh.material.opacity = (mesh.userData['scale'] - 1) * 2; //2等于1/(1.5-1.0)，保证透明度在0~1之间变化\r\n        } else if (\r\n          mesh.userData['scale'] > 1.5 &&\r\n          mesh.userData['scale'] <= 2\r\n        ) {\r\n          mesh.material.opacity = 1 - (mesh.userData['scale'] - 1.5) * 2; //2等于1/(2.0-1.5) mesh缩放2倍对应0 缩放1.5被对应1\r\n        } else {\r\n          mesh.userData['scale'] = 1;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Earth;\r\n","import { LoadingManager, TextureLoader } from 'three';\r\nimport { resources } from './Assets';\r\n\r\n// 资源加载\r\nclass Resources {\r\n  constructor(callback) {\r\n    this.callback = callback;\r\n    this.textures = {}; // 贴图对象\r\n    this.setLoadingManager();\r\n    this.loadResources();\r\n  }\r\n  /**\r\n   * 管理加载状态\r\n   */\r\n  setLoadingManager() {\r\n    this.manager = new LoadingManager();\r\n    this.manager.onStart = () => console.log('开始加载资源文件');\r\n    this.manager.onLoad = () => this.callback();\r\n    this.manager.onProgress = (url) => console.log(`正在加载：${url}`);\r\n    this.manager.onError = (url) => console.log(`加载失败：${url}`);\r\n  }\r\n\r\n  /**\r\n   * 加载资源\r\n   */\r\n  async loadResources() {\r\n    this.textureLoader = new TextureLoader(this.manager);\r\n    await resources?.textures?.forEach((item) => {\r\n      this.textureLoader.load(item.url, (result) => {\r\n        this.textures[item.name] = result;\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport default Resources;\r\n","import { EventEmitter } from 'pietile-eventemitter';\r\n\r\nclass Sizes {\r\n  constructor(options) {\r\n    this.emitter = new EventEmitter();\r\n    // Viewport size\r\n    this.$sizeViewport = options.dom;\r\n\r\n    this.viewport = {\r\n      width: 0,\r\n      height: 0,\r\n    };\r\n\r\n    this.resize = this.resize.bind(this);\r\n    window.addEventListener('resize', this.resize);\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * 目前用于监听历史记录执行 historyChange\r\n   * @param event 事件\r\n   * @param fun 执行\r\n   */\r\n  $on(event, fun) {\r\n    this.emitter.on(event, () => {\r\n      fun();\r\n    });\r\n  }\r\n\r\n  resize() {\r\n    // 可视区域大小\r\n    this.viewport.width = this.$sizeViewport.offsetWidth;\r\n    this.viewport.height = this.$sizeViewport.offsetHeight;\r\n    this.emitter.emit('resize');\r\n  }\r\n}\r\n\r\nexport default Sizes;\r\n","export default [\r\n  {\r\n    startArray: {\r\n      name: '杭州',\r\n      N: 30.246026,\r\n      E: 120.210792,\r\n    },\r\n    endArray: [\r\n      {\r\n        name: '曼谷',\r\n        N: 22, //维度\r\n        E: 100.49074172973633, //经度\r\n      },\r\n      {\r\n        name: '澳大利亚',\r\n        N: -23.68477416688374,\r\n        E: 133.857421875,\r\n      },\r\n\r\n      {\r\n        name: '新疆维吾尔自治区',\r\n        N: 41.748,\r\n        E: 84.9023,\r\n      },\r\n\r\n      {\r\n        name: '德黑兰',\r\n        N: 35,\r\n        E: 51,\r\n      },\r\n      {\r\n        name: '德黑兰',\r\n        N: 35,\r\n        E: 51,\r\n      },\r\n      {\r\n        name: '美国',\r\n        N: 34.125447565116126,\r\n        E: 241.7431640625,\r\n      },\r\n      {\r\n        name: '英国',\r\n        N: 51.508742458803326,\r\n        E: 359.82421875,\r\n      },\r\n      {\r\n        name: '巴西',\r\n        N: -9.96885060854611,\r\n        E: 668.1445312499999,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    startArray: {\r\n      name: '北京',\r\n      N: 39.89491,\r\n      E: 116.322056,\r\n    },\r\n    endArray: [\r\n      {\r\n        name: '西藏',\r\n        N: 29.660361, //维度\r\n        E: 91.132212, //经度\r\n      },\r\n      {\r\n        name: '广西',\r\n        N: 22.830824,\r\n        E: 108.30616,\r\n      },\r\n\r\n      {\r\n        name: '江西',\r\n        N: 28.676493,\r\n        E: 115.892151,\r\n      },\r\n\r\n      {\r\n        name: '贵阳',\r\n        N: 26.647661,\r\n        E: 106.630153,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import Basic from './Basic';\r\nimport Earth from './Earth';\r\nimport Resources from './Resources';\r\nimport Sizes from './Sizes';\r\nimport Data from './assets/Data';\r\n\r\nclass World {\r\n  constructor(option) {\r\n    this.option = option;\r\n    this.basic = new Basic(option.dom);\r\n    this.renderer = this.basic.renderer;\r\n    this.scene = this.basic.scene;\r\n    this.camera = this.basic.camera;\r\n    this.controls = this.basic.controls;\r\n\r\n    // 自适应处理\r\n    this.sizes = new Sizes({ dom: option.dom });\r\n    this.sizes.$on('resize', () => {\r\n      this.renderer.setSize(\r\n        Number(this.sizes.viewport.width),\r\n        Number(this.sizes.viewport.height),\r\n      );\r\n      this.camera.aspect =\r\n        Number(this.sizes.viewport.width) / Number(this.sizes.viewport.height);\r\n      this.camera.updateProjectionMatrix();\r\n    });\r\n    // 资源加载\r\n    this.resources = new Resources(async () => {\r\n      await this.createEarth();\r\n      this.render();\r\n    });\r\n  }\r\n\r\n  // 创建地球\r\n  async createEarth() {\r\n    this.earth = new Earth({\r\n      data: Data,\r\n      dom: this.option.dom,\r\n      textures: this.resources.textures,\r\n      earth: {\r\n        radius: 50,\r\n        rotateSpeed: 0.001,\r\n        isRotation: true,\r\n      },\r\n      satellite: {\r\n        show: true,\r\n        rotateSpeed: -0.01,\r\n        size: 1,\r\n        number: 2,\r\n      },\r\n      punctuation: {\r\n        circleColor: 0x3892ff,\r\n        lightColumn: {\r\n          startColor: 0xe4007f, // 起点颜色\r\n          endColor: 0xffffff, // 终点颜色\r\n        },\r\n      },\r\n      flyLine: {\r\n        color: 0xf3ae76, // 飞线的颜色\r\n        flyLineColor: 0xff7714, // 飞行线的颜色\r\n        speed: 0.005, // 拖尾飞线的速度\r\n      },\r\n    });\r\n    this.scene.add(this.earth.group);\r\n    await this.earth.init();\r\n    // 隐藏dom\r\n    const loading = document.querySelector('#loading');\r\n    loading.classList.add('out');\r\n  }\r\n\r\n  /**\r\n   * 渲染函数\r\n   */\r\n  render() {\r\n    requestAnimationFrame(this.render.bind(this));\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.controls && this.controls.update();\r\n    this.earth && this.earth.render();\r\n  }\r\n}\r\n\r\nexport default World;\r\n","export default \"uniform vec3 glowColor;\\r\\nuniform float bias;\\r\\nuniform float power;\\r\\nuniform float time;\\r\\nvarying vec3 vp;\\r\\nvarying vec3 vNormal;\\r\\nvarying vec3 vPositionNormal;\\r\\nuniform float scale;\\r\\n// 获取纹理\\r\\nuniform sampler2D map;\\r\\n// 纹理坐标\\r\\nvarying vec2 vUv;\\r\\n\\r\\nvoid main(void){\\r\\n  float a = pow( bias + scale * abs(dot(vNormal, vPositionNormal)), power );\\r\\n  if(vp.y > time && vp.y < time + 20.0) {\\r\\n    float t =  smoothstep(0.0, 0.8,  (1.0 - abs(0.5 - (vp.y - time) / 20.0)) / 3.0  );\\r\\n    gl_FragColor = mix(gl_FragColor, vec4(glowColor, 1.0), t * t );\\r\\n  }\\r\\n  gl_FragColor = mix(gl_FragColor, vec4( glowColor, 1.0 ), a);\\r\\n  float b = 0.8;\\r\\n  gl_FragColor = gl_FragColor + texture2D( map, vUv );\\r\\n}\"","export default \"\\r\\nvarying vec2 vUv;\\r\\nvarying vec3 vNormal;\\r\\nvarying vec3 vp;\\r\\nvarying vec3 vPositionNormal;\\r\\nvoid main(void){\\r\\n  vUv = uv;\\r\\n  vNormal = normalize( normalMatrix * normal ); // 转换到视图空间\\r\\n  vp = position;\\r\\n  vPositionNormal = normalize(( modelViewMatrix * vec4(position, 1.0) ).xyz);\\r\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\r\\n}\""],"names":["World","dom","document","querySelector","gradient","redCircle","label","aperture","glow","light_column","aircraft","earth","textures","name","url","resources","THREE","OrbitControls","Basic","_classCallCheck","initSences","setControls","_createClass","key","value","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","alpha","antialias","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","controls","autoRotateSpeed","enableDamping","dampingFactor","enableZoom","minDistance","maxDistance","enablePan","gsap","Group","SphereGeometry","PointsMaterial","Points","Color","ShaderMaterial","Mesh","Vector3","BufferGeometry","BufferAttribute","SpriteMaterial","Sprite","NormalBlending","MeshBasicMaterial","TextureLoader","DoubleSide","BoxGeometry","earthFragment","earthVertex","createAnimateLine","createLightPillar","createPointMesh","createWaveMesh","getCirclePoints","lon2xyz","flyArc","html2canvas","randomHexColor","Earth","options","group","scale","earthGroup","add","isRotation","timeValue","uniforms","glowColor","type","bias","power","time","isHover","map","markupPoint","waveMeshArr","circleLineList","circleList","x","n","init","_this","Promise","resolve","createEarth","createStars","createRandomStars","createEarthGlow","createEarthAperture","createMarkupPoint","createSpriteLabel","createAnimateCircle","createFlyLine","show","earth_geometry","radius","earth_border","pointMaterial","color","transparent","sizeAttenuation","opacity","vertexColors","size","points","earth_material","vertexShader","fragmentShader","needsUpdate","vertices","colors","i","vertex","Math","random","y","z","push","around","setAttribute","Float32Array","aroundMaterial","side","aroundPoints","stars","geometry","x0","y0","z0","starRadius","vectorRadius","sqrt","pow","starPosition","material","cube","rotation","PI","R","texture","spriteMaterial","depthWrite","sprite","join","AeroSphere","coeficient","blending","sphere","mesh","_createMarkupPoint","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_this2","wrap","_callee2$","_context2","prev","next","all","data","_ref","_callee","item","lon","lat","LightPillar","WaveMesh","_callee$","_context","startArray","E","N","punctuationMaterial","punctuation","circleColor","index","endArray","obj","stop","_x","apply","arguments","_this3","_cityArray","cityArray","concat","_toConsumableArray","_ref2","_callee3","e","p","div","shareContent","opts","canvas","dataURL","len","_callee3$","_context3","getElementById","innerHTML","backgroundColor","dpi","sent","toDataURL","load","length","_x2","list","number","closed","mat","line","pointList","l2","clone","rotateZ","l3","ball","satellite","ball2","ball3","ball01","num","floor","ball02","num02","ball03","num03","_this4","flyLineArcGroup","userData","forEach","cities","arcline","flyLine","to","duration","ease","render","_this$flyLineArcGroup","_this$flyLineArcGroup2","_this5","rotateSpeed","fly","speed","flyEndAngle","rotateY","LoadingManager","Resources","callback","setLoadingManager","loadResources","manager","onStart","console","log","onLoad","onProgress","onError","_loadResources","_resources$textures","textureLoader","result","EventEmitter","Sizes","emitter","$sizeViewport","viewport","width","height","resize","bind","addEventListener","$on","event","fun","on","offsetWidth","offsetHeight","emit","Data","option","basic","sizes","Number","aspect","updateProjectionMatrix","_createEarth","loading","lightColumn","startColor","endColor","flyLineColor","classList","requestAnimationFrame","update"],"sourceRoot":""}